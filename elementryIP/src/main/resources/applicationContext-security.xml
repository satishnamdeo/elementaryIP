<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<global-method-security pre-post-annotations="enabled" />


	<http pattern="/javascript/jqueryUI/base/images/*" security="none"></http>
	<http pattern="/javascript/jqueryUI/base/*" security="none"></http>
	<http pattern="/javascript/jqueryUI/*" security="none"></http>
	<http pattern="/javascript/**" security="none"></http>
	<http pattern="/images/**" security="none"></http>
	<http pattern="/css/**" security="none"></http>

	<http auto-config="false" use-expressions="true"
		entry-point-ref="loginUrlAuthenticationEntryPoint"
		access-decision-manager-ref="customAccessDecisionManager">
		<intercept-url pattern="/login.html" access="ROLE_ANONYMOUS" />
		<intercept-url pattern="/**"
			access="hasAnyRole('ADMIN','USER')" />
		<access-denied-handler error-page="/elementryIp/accessdenied.html" />
		<remember-me key="myAppKey" token-validity-seconds="864000" />
		<custom-filter ref="customUsernamePasswordAuthenticationFilter"
			before="FORM_LOGIN_FILTER"></custom-filter>
		<form-login login-page="/login.html" default-target-url="/home.html"
			authentication-failure-url="/login.html" />
		<logout delete-cookies="JSESSIONID" logout-url="/j_spring_security_logout"
			logout-success-url="/login.html" invalidate-session="true" />
	</http>
	<authentication-manager alias="authenticationManager">
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="
					select email as username,password, is_active as enabled
					from user where email=?"
				authorities-by-username-query="select user.email as username, role.role_code from user , role_master as role where user.email=? and user.role_id=role.role_id " />
				<password-encoder ref="passwordEncoder" />
		</authentication-provider>
	</authentication-manager>

	<!-- For hashing and salting user passwords -->
	<beans:bean id="passwordEncoder" class="com.eip.util.CustomPasswordEncoder">
		<beans:constructor-arg value="256" />
		<beans:constructor-arg value="true" />
		<beans:property name="saltValue" value="otig salt value" />
	</beans:bean>
	<!-- <beans:bean id="shaEncriptorDecriptor" class="com.otig.utils.SHAEncriptorDecriptor">
		<beans:constructor-arg value="256" />
		<beans:property name="saltValue" value="medikm salt value" />
	</beans:bean> -->

	<beans:bean
		class="org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler" />

	<beans:bean id="customAccessDecisionManager"
		class="com.eip.util.CustomerRoleAccessDecisionManager" />

	<beans:bean id="loginUrlAuthenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/login.html" />
	</beans:bean>


	<beans:bean id="customUsernamePasswordAuthenticationFilter"
		class="com.eip.util.CustomUsernamePasswordAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="authenticationFailureHandler"
			ref="failureHandler" />
		<beans:property name="authenticationSuccessHandler"
			ref="successHandler" />
	</beans:bean>


	<beans:bean id="successHandler" class="com.eip.util.LoginTargetHandler" />

	<beans:bean id="failureHandler" class="com.eip.util.LoginFailureTargetHandler" />

</beans:beans>